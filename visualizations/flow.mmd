flowchart TD
    %% More refined professional color scheme with better readability
    classDef controllerNode fill:#f5f9ff,stroke:#4a6fa5,stroke-width:2px;
    classDef controllerBox fill:#5d87c1,stroke:#3b5998,stroke-width:1px,color:white,font-weight:bold;
    classDef controllerDiamond fill:#d4e2f9,stroke:#4a6fa5,stroke-width:1px,color:#2c3e50,font-weight:bold;
    classDef controllerCircle fill:#d4e2f9,stroke:#4a6fa5,stroke-width:1.5px,color:#2c3e50,font-weight:bold;
    classDef controllerTerminal fill:#d95350,stroke:#a23835,stroke-width:1px,color:white,font-weight:bold;
    
    classDef explorationNode fill:#f7fcf5,stroke:#2c784e,stroke-width:2px;
    classDef explorationBox fill:#5a9178,stroke:#2c784e,stroke-width:1px,color:white,font-weight:bold;
    classDef explorationDiamond fill:#d4f5e9,stroke:#2c784e,stroke-width:1px,color:#2c3e50,font-weight:bold;
    classDef explorationCircle fill:#d4f5e9,stroke:#2c784e,stroke-width:1.5px,color:#2c3e50,font-weight:bold;
    
    subgraph epuck["EPuckController Node"]
        A[Robot Initialization] --> B[Robot Sensors & Motors Setup]
        B --> C[ROS2 Publishers/Subscribers Setup]
        C --> D[Main Control Loop]
        D --> E{Check Nav2 Activity}
        E -- "Active" --> F[Use Nav2 Velocity Commands]
        E -- "Inactive" --> G[No Movement]
        F --> H[Apply Motor Speeds]
        G --> H
        H --> I[Publish Robot State]
        I --> J{Check for Movement Progress}
        J -- "Stuck Timeout" --> K[Terminate Robot]
        J -- "Moving" --> D
        
        I --> |"Odometry\nLiDAR Scan\nTF\nClock"| L((ROS2\nTopics))
    end
    
    subgraph frontier["FrontierExploration Node"]
        M[Initialize Exploration] --> N[Setup Nav2 Action Client]
        N --> O[Subscribe to Map & Frontiers]
        O --> P{Map Update}
        P -- "Map Ready" --> Q[Find Frontier]
        Q --> R{Valid Frontier Found?}
        R -- Yes --> S[Score Frontiers]
        S --> T[Select Best Frontier]
        T --> U[Send Goal to Nav2]
        U --> V[Publish Assigned Frontier]
        U --> W{Goal Response}
        W -- "Accepted" --> X[Wait for Result]
        W -- "Rejected" --> Y[Cooldown]
        X --> Z{Goal Status}
        Z -- "Succeeded/Failed" --> Y
        Y --> P
        
        V --> |"frontier"| AA((Shared\nFrontier\nTopic))
        AA --> BB[Store Other Robots' Frontiers]
        BB --> S
        
        CC[Check Current Goal Timer] --> DD{Is Current Goal\nStill a Frontier?}
        DD -- No --> EE[Cancel Goal]
        EE --> P
    end
    
    %% Connections between subgraphs
    L -- "Map/Scan" --> P
    L -- "Odometry" --> P
    L <-- "cmd_vel" --> F
    
    %% Apply styles
    class epuck controllerNode
    class frontier explorationNode
    class A,B,C,D,F,G,H,I controllerBox
    class E,J controllerDiamond
    class K controllerTerminal
    class L controllerCircle
    class M,N,O,Q,S,T,U,V,X,Y,BB,CC,EE explorationBox
    class P,R,W,Z,DD explorationDiamond
    class AA explorationCircle