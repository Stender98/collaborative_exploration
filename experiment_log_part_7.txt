Starting automated experiment runs
==================================
This script will run experiments with:
- Both controller types (centralised and decentralised)
- All robot counts: 13
- 1 runs for each configuration

Total configurations: 1
Total runs: 1

Starting in 5 seconds... Press Ctrl+C to cancel

========================================================
CONFIGURATION 1 of 1
Mode: decentralised
Robots: 13
Runs: 1
========================================================

========================================================
Running test with mode=d, robots=13, runs=1
========================================================
spawn ./test.sh

Choose mode: centralised (c) or decentralised (d): d
Decentralised mode selected.

Select number of robots: 1, 2, 3, 5, 8, 13 or 21
Enter number of robots: 13

Enter number of runs: 1
Starting run 1 of 1...
Launching Webots with world: /home/cesnes/MasterThesis/worlds/Experiment_13_Robot.wbt...

Launching ROS 2 system with...
Webots executable path: /snap/bin/webots
Webots controller path: /snap/webots/27/usr/share/webots/webots-controller
Mode: decentralised
Number of Robots: 13
Run Index: 1
Waiting for /map and /clock topics to become available...
Topics /map and /clock are available.
Launching map coverage logger...
Waiting for 95% map coverage...
Elapsed time: 0 seconds
Checking for coverage completion...
Elapsed time: 6 seconds
Checking for coverage completion...
Elapsed time: 12 seconds
Checking for coverage completion...
Elapsed time: 18 seconds
Checking for coverage completion...
Elapsed time: 25 seconds
Checking for coverage completion...
Elapsed time: 31 seconds
Checking for coverage completion...
Elapsed time: 37 seconds
Checking for coverage completion...
Elapsed time: 43 seconds
Checking for coverage completion...
Elapsed time: 49 seconds
Checking for coverage completion...
Elapsed time: 56 seconds
Checking for coverage completion...
Elapsed time: 62 seconds
Checking for coverage completion...
Elapsed time: 68 seconds
Checking for coverage completion...
Elapsed time: 74 seconds
Checking for coverage completion...
Elapsed time: 80 seconds
Checking for coverage completion...
Elapsed time: 87 seconds
Checking for coverage completion...
Elapsed time: 93 seconds
Checking for coverage completion...
Elapsed time: 99 seconds
Checking for coverage completion...
Elapsed time: 105 seconds
Checking for coverage completion...
Elapsed time: 112 seconds
Checking for coverage completion...
Elapsed time: 118 seconds
Checking for coverage completion...
Elapsed time: 124 seconds
Checking for coverage completion...
Elapsed time: 130 seconds
Checking for coverage completion...
Elapsed time: 136 seconds
Checking for coverage completion...
Elapsed time: 143 seconds
Checking for coverage completion...
Elapsed time: 149 seconds
Checking for coverage completion...
Elapsed time: 155 seconds
Checking for coverage completion...
Elapsed time: 161 seconds
Checking for coverage completion...
Elapsed time: 167 seconds
Checking for coverage completion...
Elapsed time: 174 seconds
Checking for coverage completion...
Elapsed time: 180 seconds
Checking for coverage completion...
Elapsed time: 186 seconds
Checking for coverage completion...
Elapsed time: 192 seconds
Checking for coverage completion...
Elapsed time: 198 seconds
Checking for coverage completion...
Elapsed time: 205 seconds
Checking for coverage completion...
Elapsed time: 211 seconds
Checking for coverage completion...
Elapsed time: 217 seconds
Checking for coverage completion...
Elapsed time: 223 seconds
Checking for coverage completion...
Elapsed time: 229 seconds
Checking for coverage completion...
Elapsed time: 236 seconds
Checking for coverage completion...
Elapsed time: 242 seconds
Checking for coverage completion...
Elapsed time: 248 seconds
Checking for coverage completion...
Elapsed time: 254 seconds
Checking for coverage completion...
Elapsed time: 261 seconds
Checking for coverage completion...
Elapsed time: 267 seconds
Checking for coverage completion...
Elapsed time: 273 seconds
Checking for coverage completion...
Elapsed time: 279 seconds
Checking for coverage completion...
Elapsed time: 286 seconds
Checking for coverage completion...
Elapsed time: 292 seconds
Checking for coverage completion...
Elapsed time: 298 seconds
Checking for coverage completion...
Elapsed time: 304 seconds
Checking for coverage completion...
Elapsed time: 310 seconds
Checking for coverage completion...
Elapsed time: 317 seconds
Checking for coverage completion...
Elapsed time: 323 seconds
Checking for coverage completion...
Elapsed time: 329 seconds
Checking for coverage completion...
Elapsed time: 335 seconds
Checking for coverage completion...
Elapsed time: 342 seconds
Checking for coverage completion...
Elapsed time: 348 seconds
Checking for coverage completion...
Elapsed time: 354 seconds
Checking for coverage completion...
Elapsed time: 360 seconds
Checking for coverage completion...
Elapsed time: 367 seconds
Checking for coverage completion...
Elapsed time: 373 seconds
Checking for coverage completion...
Elapsed time: 379 seconds
Checking for coverage completion...
Elapsed time: 385 seconds
Checking for coverage completion...
Elapsed time: 391 seconds
Checking for coverage completion...
Elapsed time: 398 seconds
Checking for coverage completion...
Elapsed time: 404 seconds
Checking for coverage completion...
Elapsed time: 410 seconds
Checking for coverage completion...
Elapsed time: 416 seconds
Checking for coverage completion...
Elapsed time: 423 seconds
Checking for coverage completion...
Elapsed time: 429 seconds
Checking for coverage completion...
Elapsed time: 435 seconds
Checking for coverage completion...
Elapsed time: 441 seconds
Checking for coverage completion...
Elapsed time: 447 seconds
Checking for coverage completion...
Elapsed time: 454 seconds
Checking for coverage completion...
Elapsed time: 460 seconds
Checking for coverage completion...
Elapsed time: 466 seconds
Checking for coverage completion...
Elapsed time: 472 seconds
Checking for coverage completion...
Elapsed time: 478 seconds
Checking for coverage completion...
Elapsed time: 485 seconds
Checking for coverage completion...
Elapsed time: 491 seconds
Checking for coverage completion...
Elapsed time: 497 seconds
Checking for coverage completion...
Elapsed time: 503 seconds
Checking for coverage completion...
Elapsed time: 509 seconds
Checking for coverage completion...
Elapsed time: 516 seconds
Checking for coverage completion...
Elapsed time: 522 seconds
Checking for coverage completion...
Elapsed time: 528 seconds
Checking for coverage completion...
Elapsed time: 534 seconds
Checking for coverage completion...
Elapsed time: 540 seconds
Checking for coverage completion...
Coverage completion message received!
./test.sh: line 257: return: can only `return' from a function or sourced script
Stopping CPU load monitor...
Saving map and running evaluation scripts...
[0m[INFO] [1747900675.683719946] [map_saver]: 
	map_saver lifecycle node launched. 
	Waiting on external lifecycle transitions to activate
	See https://design.ros2.org/articles/node_lifecycle.html for more information.[0m
[0m[INFO] [1747900675.683812742] [map_saver]: Creating[0m
[0m[INFO] [1747900675.683932732] [map_saver]: Configuring[0m
[0m[INFO] [1747900675.688601436] [map_saver]: Saving map from 'map' topic to '/home/cesnes/MasterThesis/logs/decentralised/13/1/slam_map' file[0m
[33m[WARN] [1747900675.688645720] [map_saver]: Free threshold unspecified. Setting it to default value: 0.250000[0m
[33m[WARN] [1747900675.688662355] [map_saver]: Occupied threshold unspecified. Setting it to default value: 0.650000[0m
[33m[WARN] [1747900675.693878272] [map_io]: Image format unspecified. Setting it to: pgm[0m
[0m[INFO] [1747900675.694140892] [map_io]: Received a 215 X 219 map @ 0.05 m/pix[0m
[0m[INFO] [1747900675.701163362] [map_io]: Writing map occupancy data to /home/cesnes/MasterThesis/logs/decentralised/13/1/slam_map.pgm[0m
[0m[INFO] [1747900675.701532864] [map_io]: Writing map metadata to /home/cesnes/MasterThesis/logs/decentralised/13/1/slam_map.yaml[0m
[0m[INFO] [1747900675.701606771] [map_io]: Map saved[0m
[0m[INFO] [1747900675.701612930] [map_saver]: Map saved successfully[0m
[0m[INFO] [1747900675.703072879] [map_saver]: Destroying[0m
Map saved.
Waiting for evaluation to finish...
Terminating processes for run 1...
Run 1 completed.
All 1 runs completed! Check the terminal tabs and log files for output.
Completed configuration. Waiting 30 seconds before next configuration...

========================================================
All experiments completed!
Total configurations run: 1
Total runs completed: 1
========================================================
