Starting automated experiment runs
==================================
This script will run experiments with:
- Both controller types (centralised and decentralised)
- All robot counts: 8
- 1 runs for each configuration

Total configurations: 1
Total runs: 1

Starting in 5 seconds... Press Ctrl+C to cancel

========================================================
CONFIGURATION 1 of 1
Mode: centralised
Robots: 8
Runs: 1
========================================================

========================================================
Running test with mode=c, robots=8, runs=1
========================================================
spawn ./test.sh

Choose mode: centralised (c) or decentralised (d): c
Centralised mode selected.

Select number of robots: 1, 2, 3, 5, 8, 13 or 21
Enter number of robots: 8

Enter number of runs: 1
Starting run 1 of 1...
Launching Webots with world: /home/cesnes/MasterThesis/worlds/Experiment_8_Robot.wbt...

Launching ROS 2 system with...
Webots executable path: /snap/bin/webots
Webots controller path: /snap/webots/27/usr/share/webots/webots-controller
Mode: centralised
Number of Robots: 8
Run Index: 1
Waiting for /map and /clock topics to become available...
Topics /map and /clock are available.
Launching map coverage logger...
Waiting for 95% map coverage...
Elapsed time: 0 seconds
Checking for coverage completion...
Elapsed time: 6 seconds
Checking for coverage completion...
Elapsed time: 13 seconds
Checking for coverage completion...
Elapsed time: 19 seconds
Checking for coverage completion...
Elapsed time: 25 seconds
Checking for coverage completion...
Elapsed time: 32 seconds
Checking for coverage completion...
Elapsed time: 38 seconds
Checking for coverage completion...
Elapsed time: 45 seconds
Checking for coverage completion...
Elapsed time: 51 seconds
Checking for coverage completion...
Elapsed time: 57 seconds
Checking for coverage completion...
Elapsed time: 64 seconds
Checking for coverage completion...
Elapsed time: 70 seconds
Checking for coverage completion...
Elapsed time: 77 seconds
Checking for coverage completion...
Elapsed time: 83 seconds
Checking for coverage completion...
Elapsed time: 89 seconds
Checking for coverage completion...
Elapsed time: 96 seconds
Checking for coverage completion...
Elapsed time: 102 seconds
Checking for coverage completion...
Elapsed time: 109 seconds
Checking for coverage completion...
Elapsed time: 115 seconds
Checking for coverage completion...
Elapsed time: 122 seconds
Checking for coverage completion...
Elapsed time: 128 seconds
Checking for coverage completion...
Elapsed time: 135 seconds
Checking for coverage completion...
Elapsed time: 141 seconds
Checking for coverage completion...
Elapsed time: 148 seconds
Checking for coverage completion...
Elapsed time: 154 seconds
Checking for coverage completion...
Elapsed time: 161 seconds
Checking for coverage completion...
Elapsed time: 167 seconds
Checking for coverage completion...
Elapsed time: 174 seconds
Checking for coverage completion...
Elapsed time: 181 seconds
Checking for coverage completion...
Elapsed time: 188 seconds
Checking for coverage completion...
Elapsed time: 194 seconds
Checking for coverage completion...
Elapsed time: 201 seconds
Checking for coverage completion...
Elapsed time: 207 seconds
Checking for coverage completion...
Elapsed time: 213 seconds
Checking for coverage completion...
Elapsed time: 220 seconds
Checking for coverage completion...
Elapsed time: 226 seconds
Checking for coverage completion...
Elapsed time: 233 seconds
Checking for coverage completion...
Elapsed time: 239 seconds
Checking for coverage completion...
Elapsed time: 246 seconds
Checking for coverage completion...
Elapsed time: 253 seconds
Checking for coverage completion...
Elapsed time: 259 seconds
Checking for coverage completion...
Coverage completion message received!
./test.sh: line 257: return: can only `return' from a function or sourced script
Stopping CPU load monitor...
Saving map and running evaluation scripts...
[0m[INFO] [1747745720.233611213] [map_saver]: 
	map_saver lifecycle node launched. 
	Waiting on external lifecycle transitions to activate
	See https://design.ros2.org/articles/node_lifecycle.html for more information.[0m
[0m[INFO] [1747745720.233721343] [map_saver]: Creating[0m
[0m[INFO] [1747745720.233854787] [map_saver]: Configuring[0m
[0m[INFO] [1747745720.241041131] [map_saver]: Saving map from 'map' topic to '/home/cesnes/MasterThesis/logs/centralised/8/1/slam_map' file[0m
[33m[WARN] [1747745720.241085509] [map_saver]: Free threshold unspecified. Setting it to default value: 0.250000[0m
[33m[WARN] [1747745720.241105439] [map_saver]: Occupied threshold unspecified. Setting it to default value: 0.650000[0m
[33m[WARN] [1747745720.336540338] [map_io]: Image format unspecified. Setting it to: pgm[0m
[0m[INFO] [1747745720.336614164] [map_io]: Received a 212 X 227 map @ 0.05 m/pix[0m
[0m[INFO] [1747745720.345678551] [map_io]: Writing map occupancy data to /home/cesnes/MasterThesis/logs/centralised/8/1/slam_map.pgm[0m
[0m[INFO] [1747745720.346176814] [map_io]: Writing map metadata to /home/cesnes/MasterThesis/logs/centralised/8/1/slam_map.yaml[0m
[0m[INFO] [1747745720.346296408] [map_io]: Map saved[0m
[0m[INFO] [1747745720.346308133] [map_saver]: Map saved successfully[0m
[0m[INFO] [1747745720.349035227] [map_saver]: Destroying[0m
Map saved.
Waiting for evaluation to finish...
Terminating processes for run 1...
Run 1 completed.
All 1 runs completed! Check the terminal tabs and log files for output.
Completed configuration. Waiting 30 seconds before next configuration...

========================================================
All experiments completed!
Total configurations run: 1
Total runs completed: 1
========================================================
